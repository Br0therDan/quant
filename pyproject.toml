[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.uv.workspace]
members = ["microservices/*"]

[project]
name = "quant-workspace"
version = "0.1.0"
description = "Alpha Vantage 기반 단일 사용자용 퀀트 백테스트 앱"
authors = [{ name = "Your Name", email = "your.email@example.com" }]
readme = "README.md"
requires-python = ">=3.12"
keywords = ["quantitative", "backtest", "finance", "alpha-vantage"]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
]

dependencies = [
    "mysingle-quant>=0.1.0",
    "data-service",
    "strategy-service",
    "backtest-service",
    "gateway-service",
    "duckdb>=0.6.0",
]

[tool.uv.sources]
data-service = { workspace = true }
strategy-service = { workspace = true }
backtest-service = { workspace = true }
gateway-service = { workspace = true }

[tool.setuptools]
packages = [] # 루트 프로젝트는 패키지를 포함하지 않음

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "types-requests>=2.31.0",
]

[project.scripts]
quant = "shared.cli:app"


[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults (FastAPI style)
    "B904",  # raise ... from err (너무 엄격함)
    "UP007", # Union syntax (호환성 위해 유지)
    "F401",  # unused imports (일시적으로 무시)
    "F841",  # unused variables (개발 중 일시적으로 무시)
    "B007",  # unused loop variables (enumerate에서 자주 발생)
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
explicit_package_bases = true
namespace_packages = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=services --cov=shared --cov-report=term-missing"
testpaths = ["tests", "services", "shared"]

[tool.coverage.run]
source = ["services", "shared"]
omit = ["*/tests/*", "*/__pycache__/*", "*/venv/*", "*/.venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "build"]
skips = ["B101", "B601"]

[dependency-groups]
dev = ["pandas-stubs>=2.3.2.250926", "ruff>=0.13.0"]
