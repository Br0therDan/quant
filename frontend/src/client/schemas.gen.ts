// This file is auto-generated by @hey-api/openapi-ts

export const BacktestConfigSchema = {
	properties: {
		name: {
			type: "string",
			title: "Name",
			description: "백테스트 이름",
		},
		description: {
			type: "string",
			title: "Description",
			description: "백테스트 설명",
			default: "",
		},
		start_date: {
			type: "string",
			format: "date-time",
			title: "Start Date",
			description: "시작일",
		},
		end_date: {
			type: "string",
			format: "date-time",
			title: "End Date",
			description: "종료일",
		},
		symbols: {
			items: {
				type: "string",
			},
			type: "array",
			title: "Symbols",
			description: "대상 심볼 목록",
		},
		initial_cash: {
			type: "number",
			title: "Initial Cash",
			description: "초기 자본금",
			default: 100000,
		},
		max_position_size: {
			type: "number",
			title: "Max Position Size",
			description: "최대 포지션 크기 (비율)",
			default: 0.2,
		},
		commission_rate: {
			type: "number",
			title: "Commission Rate",
			description: "수수료율",
			default: 0.001,
		},
		slippage_rate: {
			type: "number",
			title: "Slippage Rate",
			description: "슬리피지율",
			default: 0.0005,
		},
		rebalance_frequency: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Rebalance Frequency",
			description: "리밸런싱 주기 (daily, weekly, monthly)",
		},
		tags: {
			items: {
				type: "string",
			},
			type: "array",
			title: "Tags",
			description: "태그",
		},
	},
	type: "object",
	required: ["name", "start_date", "end_date", "symbols"],
	title: "BacktestConfig",
	description: "백테스트 설정 내장 모델",
} as const;

export const BacktestCreateSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		name: {
			type: "string",
			title: "Name",
			description: "백테스트 이름",
		},
		description: {
			type: "string",
			title: "Description",
			description: "백테스트 설명",
			default: "",
		},
		config: {
			$ref: "#/components/schemas/BacktestConfig",
			description: "백테스트 설정",
		},
	},
	type: "object",
	required: ["name", "config"],
	title: "BacktestCreate",
	description: "백테스트 생성 요청",
} as const;

export const BacktestExecutionListResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		executions: {
			items: {
				$ref: "#/components/schemas/BacktestExecutionResponse",
			},
			type: "array",
			title: "Executions",
			description: "실행 목록",
		},
		total: {
			type: "integer",
			title: "Total",
			description: "총 개수",
		},
	},
	type: "object",
	required: ["executions", "total"],
	title: "BacktestExecutionListResponse",
	description: "백테스트 실행 목록 응답",
} as const;

export const BacktestExecutionRequestSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		signals: {
			items: {
				additionalProperties: true,
				type: "object",
			},
			type: "array",
			title: "Signals",
			description: "트레이딩 시그널 목록",
		},
	},
	type: "object",
	required: ["signals"],
	title: "BacktestExecutionRequest",
	description: "백테스트 실행 요청",
	example: {
		signals: [
			{
				action: "BUY",
				quantity: 10,
				symbol: "AAPL",
				timestamp: "2023-01-01T00:00:00",
			},
			{
				action: "SELL",
				quantity: 5,
				symbol: "AAPL",
				timestamp: "2023-01-02T00:00:00",
			},
		],
	},
} as const;

export const BacktestExecutionResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		id: {
			type: "string",
			title: "Id",
			description: "실행 ID",
		},
		backtest_id: {
			type: "string",
			title: "Backtest Id",
			description: "백테스트 ID",
		},
		execution_id: {
			type: "string",
			title: "Execution Id",
			description: "실행 ID",
		},
		start_time: {
			type: "string",
			format: "date-time",
			title: "Start Time",
			description: "실행 시작 시간",
		},
		end_time: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "End Time",
			description: "실행 종료 시간",
		},
		status: {
			$ref: "#/components/schemas/BacktestStatus",
			description: "실행 상태",
		},
		portfolio_values: {
			items: {
				type: "number",
			},
			type: "array",
			title: "Portfolio Values",
			description: "포트폴리오 가치 히스토리",
		},
		trades: {
			items: {
				$ref: "#/components/schemas/Trade",
			},
			type: "array",
			title: "Trades",
			description: "거래 내역",
		},
		positions: {
			additionalProperties: {
				$ref: "#/components/schemas/Position",
			},
			type: "object",
			title: "Positions",
			description: "최종 포지션",
		},
		error_message: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Error Message",
			description: "오류 메시지",
		},
		created_at: {
			type: "string",
			format: "date-time",
			title: "Created At",
			description: "생성 시간",
		},
	},
	type: "object",
	required: [
		"id",
		"backtest_id",
		"execution_id",
		"start_time",
		"status",
		"portfolio_values",
		"trades",
		"positions",
		"created_at",
	],
	title: "BacktestExecutionResponse",
	description: "백테스트 실행 응답",
} as const;

export const BacktestListResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		backtests: {
			items: {
				$ref: "#/components/schemas/BacktestResponse",
			},
			type: "array",
			title: "Backtests",
			description: "백테스트 목록",
		},
		total: {
			type: "integer",
			title: "Total",
			description: "총 개수",
		},
	},
	type: "object",
	required: ["backtests", "total"],
	title: "BacktestListResponse",
	description: "백테스트 목록 응답",
} as const;

export const BacktestResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		id: {
			type: "string",
			title: "Id",
			description: "백테스트 ID",
		},
		name: {
			type: "string",
			title: "Name",
			description: "백테스트 이름",
		},
		description: {
			type: "string",
			title: "Description",
			description: "백테스트 설명",
		},
		config: {
			$ref: "#/components/schemas/BacktestConfig",
			description: "백테스트 설정",
		},
		status: {
			$ref: "#/components/schemas/BacktestStatus",
			description: "실행 상태",
		},
		start_time: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "Start Time",
			description: "실행 시작 시간",
		},
		end_time: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "End Time",
			description: "실행 종료 시간",
		},
		duration_seconds: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Duration Seconds",
			description: "실행 시간(초)",
		},
		performance: {
			anyOf: [
				{
					$ref: "#/components/schemas/PerformanceMetrics",
				},
				{
					type: "null",
				},
			],
			description: "성과 지표",
		},
		created_at: {
			type: "string",
			format: "date-time",
			title: "Created At",
			description: "생성 시간",
		},
		updated_at: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "Updated At",
			description: "수정 시간",
		},
	},
	type: "object",
	required: ["id", "name", "description", "config", "status", "created_at"],
	title: "BacktestResponse",
	description: "백테스트 응답",
} as const;

export const BacktestStatusSchema = {
	type: "string",
	enum: ["pending", "running", "completed", "failed", "cancelled"],
	title: "BacktestStatus",
	description: "백테스트 상태",
} as const;

export const BacktestUpdateSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		name: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Name",
			description: "백테스트 이름",
		},
		description: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Description",
			description: "백테스트 설명",
		},
		config: {
			anyOf: [
				{
					$ref: "#/components/schemas/BacktestConfig",
				},
				{
					type: "null",
				},
			],
			description: "백테스트 설정",
		},
	},
	type: "object",
	title: "BacktestUpdate",
	description: "백테스트 수정 요청",
} as const;

export const BalanceSheetDataSchema = {
	properties: {
		symbol: {
			type: "string",
			title: "Symbol",
			description: "주식 심볼",
		},
		fiscal_date_ending: {
			type: "string",
			format: "date-time",
			title: "Fiscal Date Ending",
			description: "회계연도 종료일",
		},
		reported_currency: {
			type: "string",
			title: "Reported Currency",
			description: "보고 통화",
			default: "USD",
		},
		total_assets: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Total Assets",
			description: "총자산",
		},
		total_current_assets: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Total Current Assets",
			description: "총 유동자산",
		},
		cash_and_cash_equivalents: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Cash And Cash Equivalents",
			description: "현금 및 현금성자산",
		},
		inventory: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Inventory",
			description: "재고자산",
		},
		current_net_receivables: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Current Net Receivables",
			description: "유동 순매출채권",
		},
		property_plant_equipment: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Property Plant Equipment",
			description: "유형자산",
		},
		goodwill: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Goodwill",
			description: "영업권",
		},
		intangible_assets: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Intangible Assets",
			description: "무형자산",
		},
		total_liabilities: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Total Liabilities",
			description: "총부채",
		},
		total_current_liabilities: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Total Current Liabilities",
			description: "총 유동부채",
		},
		current_accounts_payable: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Current Accounts Payable",
			description: "유동 매입채무",
		},
		current_debt: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Current Debt",
			description: "유동부채",
		},
		long_term_debt: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Long Term Debt",
			description: "장기부채",
		},
		total_shareholder_equity: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Total Shareholder Equity",
			description: "총 자기자본",
		},
		retained_earnings: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Retained Earnings",
			description: "이익잉여금",
		},
		common_stock: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Common Stock",
			description: "보통주",
		},
		treasury_stock: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Treasury Stock",
			description: "자기주식",
		},
		common_stock_shares_outstanding: {
			anyOf: [
				{
					type: "integer",
				},
				{
					type: "null",
				},
			],
			title: "Common Stock Shares Outstanding",
			description: "보통주 발행주식수",
		},
	},
	type: "object",
	required: ["symbol", "fiscal_date_ending"],
	title: "BalanceSheetData",
	description: "재무상태표 응답 모델",
} as const;

export const BalanceSheetResponseSchema = {
	properties: {
		success: {
			type: "boolean",
			title: "Success",
			description: "요청 성공 여부",
			default: true,
		},
		message: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Message",
			description: "응답 메시지",
		},
		timestamp: {
			type: "string",
			format: "date-time",
			title: "Timestamp",
			description: "응답 시간",
		},
		data: {
			items: {
				$ref: "#/components/schemas/BalanceSheetData",
			},
			type: "array",
			title: "Data",
			description: "데이터 목록",
		},
		metadata: {
			$ref: "#/components/schemas/MetadataInfo",
			description: "메타데이터",
		},
		count: {
			type: "integer",
			title: "Count",
			description: "데이터 개수",
		},
	},
	type: "object",
	required: ["data", "metadata", "count"],
	title: "BalanceSheetResponse",
	description: "재무상태표 조회 응답 스키마",
} as const;

export const Body_Auth_forgot_passwordSchema = {
	properties: {
		email: {
			type: "string",
			format: "email",
			title: "Email",
		},
	},
	type: "object",
	required: ["email"],
	title: "Body_Auth-forgot_password",
} as const;

export const Body_Auth_loginSchema = {
	properties: {
		grant_type: {
			anyOf: [
				{
					type: "string",
					pattern: "^password$",
				},
				{
					type: "null",
				},
			],
			title: "Grant Type",
		},
		username: {
			type: "string",
			title: "Username",
		},
		password: {
			type: "string",
			format: "password",
			title: "Password",
		},
		scope: {
			type: "string",
			title: "Scope",
			default: "",
		},
		client_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Client Id",
		},
		client_secret: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			format: "password",
			title: "Client Secret",
		},
	},
	type: "object",
	required: ["username", "password"],
	title: "Body_Auth-login",
} as const;

export const Body_Auth_request_verify_tokenSchema = {
	properties: {
		email: {
			type: "string",
			format: "email",
			title: "Email",
		},
	},
	type: "object",
	required: ["email"],
	title: "Body_Auth-request_verify_token",
} as const;

export const Body_Auth_reset_passwordSchema = {
	properties: {
		token: {
			type: "string",
			title: "Token",
		},
		password: {
			type: "string",
			title: "Password",
		},
	},
	type: "object",
	required: ["token", "password"],
	title: "Body_Auth-reset_password",
} as const;

export const Body_Auth_verifySchema = {
	properties: {
		token: {
			type: "string",
			title: "Token",
		},
	},
	type: "object",
	required: ["token"],
	title: "Body_Auth-verify",
} as const;

export const CacheInfoSchema = {
	properties: {
		cached: {
			type: "boolean",
			title: "Cached",
			description: "캐시된 데이터 여부",
		},
		cache_hit: {
			type: "boolean",
			title: "Cache Hit",
			description: "캐시 히트 여부",
		},
		cache_timestamp: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "Cache Timestamp",
			description: "캐시 생성 시간",
		},
		cache_ttl: {
			anyOf: [
				{
					type: "integer",
				},
				{
					type: "null",
				},
			],
			title: "Cache Ttl",
			description: "캐시 TTL (초)",
		},
	},
	type: "object",
	required: ["cached", "cache_hit"],
	title: "CacheInfo",
	description: "캐시 정보",
} as const;

export const CashFlowDataSchema = {
	properties: {
		symbol: {
			type: "string",
			title: "Symbol",
			description: "주식 심볼",
		},
		fiscal_date_ending: {
			type: "string",
			format: "date-time",
			title: "Fiscal Date Ending",
			description: "회계연도 종료일",
		},
		reported_currency: {
			type: "string",
			title: "Reported Currency",
			description: "보고 통화",
			default: "USD",
		},
		operating_cashflow: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Operating Cashflow",
			description: "영업활동 현금흐름",
		},
		payments_for_operating_activities: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Payments For Operating Activities",
			description: "영업활동 현금지출",
		},
		proceeds_from_operating_activities: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Proceeds From Operating Activities",
			description: "영업활동 현금수입",
		},
		capital_expenditures: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Capital Expenditures",
			description: "자본적지출",
		},
		cashflow_from_investment: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Cashflow From Investment",
			description: "투자활동 현금흐름",
		},
		cashflow_from_financing: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Cashflow From Financing",
			description: "재무활동 현금흐름",
		},
		dividend_payments: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Dividend Payments",
			description: "배당금 지급",
		},
		payments_for_repurchase_of_common_stock: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Payments For Repurchase Of Common Stock",
			description: "자기주식 취득지출",
		},
		change_in_cash_and_cash_equivalents: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Change In Cash And Cash Equivalents",
			description: "현금 및 현금성자산 변동",
		},
	},
	type: "object",
	required: ["symbol", "fiscal_date_ending"],
	title: "CashFlowData",
	description: "현금흐름표 응답 모델",
} as const;

export const CashFlowResponseSchema = {
	properties: {
		success: {
			type: "boolean",
			title: "Success",
			description: "요청 성공 여부",
			default: true,
		},
		message: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Message",
			description: "응답 메시지",
		},
		timestamp: {
			type: "string",
			format: "date-time",
			title: "Timestamp",
			description: "응답 시간",
		},
		data: {
			items: {
				$ref: "#/components/schemas/CashFlowData",
			},
			type: "array",
			title: "Data",
			description: "데이터 목록",
		},
		metadata: {
			$ref: "#/components/schemas/MetadataInfo",
			description: "메타데이터",
		},
		count: {
			type: "integer",
			title: "Count",
			description: "데이터 개수",
		},
	},
	type: "object",
	required: ["data", "metadata", "count"],
	title: "CashFlowResponse",
	description: "현금흐름표 조회 응답 스키마",
} as const;

export const CompanyOverviewDataSchema = {
	properties: {
		symbol: {
			type: "string",
			title: "Symbol",
			description: "주식 심볼",
		},
		name: {
			type: "string",
			title: "Name",
			description: "회사명",
		},
		exchange: {
			type: "string",
			title: "Exchange",
			description: "거래소",
		},
		sector: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Sector",
			description: "섹터",
		},
		industry: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Industry",
			description: "산업",
		},
		description: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Description",
			description: "회사 설명",
		},
		currency: {
			type: "string",
			title: "Currency",
			description: "통화",
			default: "USD",
		},
		country: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Country",
			description: "국가",
		},
		fiscal_year_end: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Fiscal Year End",
			description: "회계연도 종료월",
		},
		latest_quarter: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "Latest Quarter",
			description: "최근 분기",
		},
		market_capitalization: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Market Capitalization",
			description: "시가총액",
		},
		ebitda: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Ebitda",
			description: "EBITDA",
		},
		pe_ratio: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Pe Ratio",
			description: "PER",
		},
		peg_ratio: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Peg Ratio",
			description: "PEG 비율",
		},
		book_value: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Book Value",
			description: "장부가치",
		},
		dividend_per_share: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Dividend Per Share",
			description: "주당 배당금",
		},
		dividend_yield: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Dividend Yield",
			description: "배당 수익률 (%)",
		},
		eps: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Eps",
			description: "주당 순이익",
		},
		revenue_per_share_ttm: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Revenue Per Share Ttm",
			description: "주당 매출(TTM)",
		},
		profit_margin: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Profit Margin",
			description: "순이익률 (%)",
		},
		operating_margin_ttm: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Operating Margin Ttm",
			description: "영업이익률(TTM) (%)",
		},
		return_on_assets_ttm: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Return On Assets Ttm",
			description: "총자산수익률(TTM) (%)",
		},
		return_on_equity_ttm: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Return On Equity Ttm",
			description: "자기자본수익률(TTM) (%)",
		},
		revenue_ttm: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Revenue Ttm",
			description: "매출(TTM)",
		},
		gross_profit_ttm: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Gross Profit Ttm",
			description: "매출총이익(TTM)",
		},
		fifty_two_week_high: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Fifty Two Week High",
			description: "52주 최고가",
		},
		fifty_two_week_low: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Fifty Two Week Low",
			description: "52주 최저가",
		},
		fifty_day_moving_average: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Fifty Day Moving Average",
			description: "50일 이동평균",
		},
		two_hundred_day_moving_average: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Two Hundred Day Moving Average",
			description: "200일 이동평균",
		},
		shares_outstanding: {
			anyOf: [
				{
					type: "integer",
				},
				{
					type: "null",
				},
			],
			title: "Shares Outstanding",
			description: "발행주식수",
		},
		beta: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Beta",
			description: "베타",
		},
		analyst_target_price: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Analyst Target Price",
			description: "목표 주가",
		},
	},
	type: "object",
	required: ["symbol", "name", "exchange"],
	title: "CompanyOverviewData",
	description: "기업 개요 응답 모델",
} as const;

export const CompanyOverviewResponseSchema = {
	properties: {
		success: {
			type: "boolean",
			title: "Success",
			description: "요청 성공 여부",
			default: true,
		},
		message: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Message",
			description: "응답 메시지",
		},
		timestamp: {
			type: "string",
			format: "date-time",
			title: "Timestamp",
			description: "응답 시간",
		},
		data: {
			$ref: "#/components/schemas/CompanyOverviewData",
			description: "데이터",
		},
		metadata: {
			$ref: "#/components/schemas/MetadataInfo",
			description: "메타데이터",
		},
	},
	type: "object",
	required: ["data", "metadata"],
	title: "CompanyOverviewResponse",
	description: "기업 개요 조회 응답 스키마",
} as const;

export const DashboardSummarySchema = {
	properties: {
		user_id: {
			type: "string",
			title: "User Id",
			description: "사용자 ID",
		},
		portfolio: {
			$ref: "#/components/schemas/PortfolioSummary",
			description: "포트폴리오 정보",
		},
		strategies: {
			$ref: "#/components/schemas/StrategySummary",
			description: "전략 정보",
		},
		recent_activity: {
			$ref: "#/components/schemas/RecentActivity",
			description: "최근 활동",
		},
	},
	type: "object",
	required: ["user_id", "portfolio", "strategies", "recent_activity"],
	title: "DashboardSummary",
	description: "대시보드 요약 데이터.",
} as const;

export const DashboardSummaryResponseSchema = {
	properties: {
		data: {
			$ref: "#/components/schemas/DashboardSummary",
			description: "대시보드 데이터",
		},
		message: {
			type: "string",
			title: "Message",
			description: "응답 메시지",
			default: "대시보드 요약 조회 성공",
		},
	},
	type: "object",
	required: ["data"],
	title: "DashboardSummaryResponse",
	description: "대시보드 요약 응답.",
} as const;

export const DataQualityInfoSchema = {
	properties: {
		quality_score: {
			type: "string",
			title: "Quality Score",
			description: "품질 점수 (0-100)",
		},
		last_updated: {
			type: "string",
			format: "date-time",
			title: "Last Updated",
			description: "마지막 업데이트 시간",
		},
		data_source: {
			type: "string",
			title: "Data Source",
			description: "데이터 출처",
		},
		confidence_level: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Confidence Level",
			description: "신뢰도 수준",
		},
	},
	type: "object",
	required: ["quality_score", "last_updated", "data_source"],
	title: "DataQualityInfo",
	description: "데이터 품질 정보",
} as const;

export const EarningsDataSchema = {
	properties: {
		symbol: {
			type: "string",
			title: "Symbol",
			description: "주식 심볼",
		},
		fiscal_date_ending: {
			type: "string",
			format: "date-time",
			title: "Fiscal Date Ending",
			description: "회계연도 종료일",
		},
		reported_date: {
			type: "string",
			format: "date-time",
			title: "Reported Date",
			description: "발표일",
		},
		reported_eps: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Reported Eps",
			description: "발표 EPS",
		},
		estimated_eps: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Estimated Eps",
			description: "예상 EPS",
		},
		surprise: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Surprise",
			description: "서프라이즈",
		},
		surprise_percentage: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Surprise Percentage",
			description: "서프라이즈 비율 (%)",
		},
	},
	type: "object",
	required: ["symbol", "fiscal_date_ending", "reported_date"],
	title: "EarningsData",
	description: "실적 발표 응답 모델",
} as const;

export const EarningsResponseSchema = {
	properties: {
		success: {
			type: "boolean",
			title: "Success",
			description: "요청 성공 여부",
			default: true,
		},
		message: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Message",
			description: "응답 메시지",
		},
		timestamp: {
			type: "string",
			format: "date-time",
			title: "Timestamp",
			description: "응답 시간",
		},
		data: {
			items: {
				$ref: "#/components/schemas/EarningsData",
			},
			type: "array",
			title: "Data",
			description: "데이터 목록",
		},
		metadata: {
			$ref: "#/components/schemas/MetadataInfo",
			description: "메타데이터",
		},
		count: {
			type: "integer",
			title: "Count",
			description: "데이터 개수",
		},
	},
	type: "object",
	required: ["data", "metadata", "count"],
	title: "EarningsResponse",
	description: "실적 데이터 조회 응답 스키마",
} as const;

export const EconomicCalendarSchema = {
	properties: {
		events: {
			items: {
				$ref: "#/components/schemas/EconomicEvent",
			},
			type: "array",
			title: "Events",
			description: "이벤트 목록",
		},
	},
	type: "object",
	required: ["events"],
	title: "EconomicCalendar",
	description: "경제 캘린더.",
} as const;

export const EconomicCalendarResponseSchema = {
	properties: {
		data: {
			$ref: "#/components/schemas/EconomicCalendar",
			description: "경제 캘린더",
		},
		message: {
			type: "string",
			title: "Message",
			description: "응답 메시지",
			default: "경제 캘린더 조회 성공",
		},
	},
	type: "object",
	required: ["data"],
	title: "EconomicCalendarResponse",
	description: "경제 캘린더 응답.",
} as const;

export const EconomicEventSchema = {
	properties: {
		event_name: {
			type: "string",
			title: "Event Name",
			description: "이벤트명",
		},
		country: {
			type: "string",
			title: "Country",
			description: "국가",
		},
		importance: {
			$ref: "#/components/schemas/ImportanceLevel",
			description: "중요도",
		},
		actual: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Actual",
			description: "실제값",
		},
		forecast: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Forecast",
			description: "예상값",
		},
		previous: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Previous",
			description: "이전값",
		},
		release_time: {
			type: "string",
			format: "date-time",
			title: "Release Time",
			description: "발표 시간",
		},
		currency: {
			type: "string",
			title: "Currency",
			description: "통화",
		},
	},
	type: "object",
	required: ["event_name", "country", "importance", "release_time", "currency"],
	title: "EconomicEvent",
	description: "경제 이벤트.",
} as const;

export const ExecutionListResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		executions: {
			items: {
				$ref: "#/components/schemas/ExecutionResponse",
			},
			type: "array",
			title: "Executions",
			description: "실행 목록",
		},
		total: {
			type: "integer",
			title: "Total",
			description: "총 개수",
		},
	},
	type: "object",
	required: ["executions", "total"],
	title: "ExecutionListResponse",
	description: "Execution list response",
} as const;

export const ExecutionResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		id: {
			type: "string",
			title: "Id",
			description: "실행 ID",
		},
		strategy_id: {
			type: "string",
			title: "Strategy Id",
			description: "전략 ID",
		},
		strategy_name: {
			type: "string",
			title: "Strategy Name",
			description: "전략 이름",
		},
		symbol: {
			type: "string",
			title: "Symbol",
			description: "심볼",
		},
		signal_type: {
			$ref: "#/components/schemas/SignalType",
		},
		signal_strength: {
			type: "number",
			title: "Signal Strength",
			description: "신호 강도",
		},
		price: {
			type: "number",
			title: "Price",
			description: "가격",
		},
		timestamp: {
			type: "string",
			format: "date-time",
			title: "Timestamp",
			description: "실행 시간",
		},
		metadata: {
			additionalProperties: true,
			type: "object",
			title: "Metadata",
			description: "메타데이터",
		},
		backtest_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Backtest Id",
			description: "백테스트 ID",
		},
		created_at: {
			type: "string",
			format: "date-time",
			title: "Created At",
			description: "생성 시간",
		},
	},
	type: "object",
	required: [
		"id",
		"strategy_id",
		"strategy_name",
		"symbol",
		"signal_type",
		"signal_strength",
		"price",
		"timestamp",
		"created_at",
	],
	title: "ExecutionResponse",
	description: "Execution response",
} as const;

export const HTTPValidationErrorSchema = {
	properties: {
		detail: {
			items: {
				$ref: "#/components/schemas/ValidationError",
			},
			type: "array",
			title: "Detail",
		},
	},
	type: "object",
	title: "HTTPValidationError",
} as const;

export const HealthResponseSchema = {
	properties: {
		status: {
			type: "string",
			title: "Status",
		},
		timestamp: {
			type: "string",
			format: "date-time",
			title: "Timestamp",
		},
		service: {
			type: "string",
			title: "Service",
		},
		version: {
			type: "string",
			title: "Version",
		},
		uptime: {
			type: "number",
			title: "Uptime",
		},
		checks: {
			additionalProperties: {
				additionalProperties: true,
				type: "object",
			},
			type: "object",
			title: "Checks",
		},
	},
	type: "object",
	required: ["status", "timestamp", "service", "version", "uptime", "checks"],
	title: "HealthResponse",
	description: "Health check response model.",
} as const;

export const HistoricalDataResponseSchema = {
	properties: {
		symbol: {
			type: "string",
			title: "Symbol",
		},
		data: {
			items: {
				additionalProperties: true,
				type: "object",
			},
			type: "array",
			title: "Data",
		},
		count: {
			type: "integer",
			title: "Count",
		},
		start_date: {
			anyOf: [
				{
					type: "string",
					format: "date",
				},
				{
					type: "null",
				},
			],
			title: "Start Date",
		},
		end_date: {
			anyOf: [
				{
					type: "string",
					format: "date",
				},
				{
					type: "null",
				},
			],
			title: "End Date",
		},
		frequency: {
			type: "string",
			title: "Frequency",
		},
	},
	type: "object",
	required: ["symbol", "data", "count", "frequency"],
	title: "HistoricalDataResponse",
} as const;

export const ImportanceLevelSchema = {
	type: "string",
	enum: ["high", "medium", "low"],
	title: "ImportanceLevel",
	description: "중요도 레벨.",
} as const;

export const IncomeStatementDataSchema = {
	properties: {
		symbol: {
			type: "string",
			title: "Symbol",
			description: "주식 심볼",
		},
		fiscal_date_ending: {
			type: "string",
			format: "date-time",
			title: "Fiscal Date Ending",
			description: "회계연도 종료일",
		},
		reported_currency: {
			type: "string",
			title: "Reported Currency",
			description: "보고 통화",
			default: "USD",
		},
		total_revenue: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Total Revenue",
			description: "총 매출",
		},
		cost_of_revenue: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Cost Of Revenue",
			description: "매출원가",
		},
		gross_profit: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Gross Profit",
			description: "매출총이익",
		},
		research_and_development: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Research And Development",
			description: "연구개발비",
		},
		selling_general_administrative: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Selling General Administrative",
			description: "판매관리비",
		},
		operating_expenses: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Operating Expenses",
			description: "영업비용",
		},
		operating_income: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Operating Income",
			description: "영업이익",
		},
		interest_income: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Interest Income",
			description: "이자수익",
		},
		interest_expense: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Interest Expense",
			description: "이자비용",
		},
		income_before_tax: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Income Before Tax",
			description: "세전이익",
		},
		income_tax_expense: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Income Tax Expense",
			description: "법인세비용",
		},
		net_income: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Net Income",
			description: "순이익",
		},
		basic_shares_outstanding: {
			anyOf: [
				{
					type: "integer",
				},
				{
					type: "null",
				},
			],
			title: "Basic Shares Outstanding",
			description: "기본 주식수",
		},
		diluted_shares_outstanding: {
			anyOf: [
				{
					type: "integer",
				},
				{
					type: "null",
				},
			],
			title: "Diluted Shares Outstanding",
			description: "희석 주식수",
		},
		basic_eps: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Basic Eps",
			description: "기본 주당순이익",
		},
		diluted_eps: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Diluted Eps",
			description: "희석 주당순이익",
		},
	},
	type: "object",
	required: ["symbol", "fiscal_date_ending"],
	title: "IncomeStatementData",
	description: "손익계산서 응답 모델",
} as const;

export const IncomeStatementResponseSchema = {
	properties: {
		success: {
			type: "boolean",
			title: "Success",
			description: "요청 성공 여부",
			default: true,
		},
		message: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Message",
			description: "응답 메시지",
		},
		timestamp: {
			type: "string",
			format: "date-time",
			title: "Timestamp",
			description: "응답 시간",
		},
		data: {
			items: {
				$ref: "#/components/schemas/IncomeStatementData",
			},
			type: "array",
			title: "Data",
			description: "데이터 목록",
		},
		metadata: {
			$ref: "#/components/schemas/MetadataInfo",
			description: "메타데이터",
		},
		count: {
			type: "integer",
			title: "Count",
			description: "데이터 개수",
		},
	},
	type: "object",
	required: ["data", "metadata", "count"],
	title: "IncomeStatementResponse",
	description: "손익계산서 조회 응답 스키마",
} as const;

export const IntegratedBacktestRequestSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		name: {
			type: "string",
			title: "Name",
			description: "백테스트 이름",
		},
		description: {
			type: "string",
			title: "Description",
			description: "백테스트 설명",
			default: "",
		},
		symbols: {
			items: {
				type: "string",
			},
			type: "array",
			title: "Symbols",
			description: "심볼 목록",
		},
		start_date: {
			type: "string",
			format: "date-time",
			title: "Start Date",
			description: "시작일",
		},
		end_date: {
			type: "string",
			format: "date-time",
			title: "End Date",
			description: "종료일",
		},
		strategy_type: {
			type: "string",
			title: "Strategy Type",
			description: "전략 타입",
		},
		strategy_params: {
			additionalProperties: true,
			type: "object",
			title: "Strategy Params",
			description: "전략 매개변수",
		},
		initial_capital: {
			type: "number",
			title: "Initial Capital",
			description: "초기 자본",
			default: 100000,
		},
	},
	type: "object",
	required: ["name", "symbols", "start_date", "end_date", "strategy_type"],
	title: "IntegratedBacktestRequest",
	description: "통합 백테스트 요청",
} as const;

export const IntegratedBacktestResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		backtest_id: {
			type: "string",
			title: "Backtest Id",
			description: "백테스트 ID",
		},
		execution_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Execution Id",
			description: "실행 ID",
		},
		result_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Result Id",
			description: "결과 ID",
		},
		status: {
			$ref: "#/components/schemas/BacktestStatus",
			description: "상태",
		},
		message: {
			type: "string",
			title: "Message",
			description: "메시지",
		},
		performance: {
			anyOf: [
				{
					$ref: "#/components/schemas/PerformanceMetrics",
				},
				{
					type: "null",
				},
			],
			description: "성과 지표",
		},
		start_time: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "Start Time",
			description: "시작 시간",
		},
		end_time: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "End Time",
			description: "종료 시간",
		},
	},
	type: "object",
	required: ["backtest_id", "status", "message"],
	title: "IntegratedBacktestResponse",
	description: "통합 백테스트 응답",
} as const;

export const LoginResponseSchema = {
	properties: {
		access_token: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Access Token",
		},
		refresh_token: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Refresh Token",
		},
		token_type: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Token Type",
		},
		user_info: {
			$ref: "#/components/schemas/UserResponse",
		},
	},
	type: "object",
	required: ["user_info"],
	title: "LoginResponse",
	example: {
		access_token: "string",
		refresh_token: "string",
		token_type: "bearer",
		user_info: {
			email: "user@example.com",
			full_name: "string",
			id: "string",
			is_active: true,
			is_superuser: false,
			is_verified: false,
		},
	},
} as const;

export const MetadataInfoSchema = {
	properties: {
		data_quality: {
			$ref: "#/components/schemas/DataQualityInfo",
		},
		cache_info: {
			$ref: "#/components/schemas/CacheInfo",
		},
		processing_time_ms: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Processing Time Ms",
			description: "처리 시간 (밀리초)",
		},
	},
	type: "object",
	required: ["data_quality", "cache_info"],
	title: "MetadataInfo",
	description: "메타데이터 정보",
} as const;

export const NewsArticleSchema = {
	properties: {
		title: {
			type: "string",
			title: "Title",
			description: "제목",
		},
		summary: {
			type: "string",
			title: "Summary",
			description: "요약",
		},
		source: {
			type: "string",
			title: "Source",
			description: "출처",
		},
		url: {
			type: "string",
			title: "Url",
			description: "URL",
		},
		published_at: {
			type: "string",
			format: "date-time",
			title: "Published At",
			description: "발행 시간",
		},
		sentiment: {
			$ref: "#/components/schemas/SentimentType",
			description: "감정",
		},
		relevance_score: {
			type: "number",
			title: "Relevance Score",
			description: "관련도 점수",
		},
		symbols: {
			items: {
				type: "string",
			},
			type: "array",
			title: "Symbols",
			description: "관련 심볼들",
		},
	},
	type: "object",
	required: [
		"title",
		"summary",
		"source",
		"url",
		"published_at",
		"sentiment",
		"relevance_score",
		"symbols",
	],
	title: "NewsArticle",
	description: "뉴스 기사.",
} as const;

export const NewsFeedSchema = {
	properties: {
		articles: {
			items: {
				$ref: "#/components/schemas/NewsArticle",
			},
			type: "array",
			title: "Articles",
			description: "기사 목록",
		},
	},
	type: "object",
	required: ["articles"],
	title: "NewsFeed",
	description: "뉴스 피드.",
} as const;

export const NewsFeedResponseSchema = {
	properties: {
		data: {
			$ref: "#/components/schemas/NewsFeed",
			description: "뉴스 피드",
		},
		message: {
			type: "string",
			title: "Message",
			description: "응답 메시지",
			default: "뉴스 피드 조회 성공",
		},
	},
	type: "object",
	required: ["data"],
	title: "NewsFeedResponse",
	description: "뉴스 피드 응답.",
} as const;

export const OAuth2AuthorizeResponseSchema = {
	properties: {
		authorization_url: {
			type: "string",
			title: "Authorization Url",
		},
	},
	type: "object",
	required: ["authorization_url"],
	title: "OAuth2AuthorizeResponse",
	example: {
		authorization_url:
			"https://example.com/oauth/authorize?response_type=code&client_id=your_client_id&redirect_uri=your_redirect_uri&scope=your_scope",
	},
} as const;

export const OAuthAccountSchema = {
	properties: {
		oauth_name: {
			type: "string",
			title: "Oauth Name",
		},
		access_token: {
			type: "string",
			title: "Access Token",
		},
		expires_at: {
			anyOf: [
				{
					type: "integer",
				},
				{
					type: "null",
				},
			],
			title: "Expires At",
		},
		refresh_token: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Refresh Token",
		},
		account_id: {
			type: "string",
			title: "Account Id",
		},
		account_email: {
			type: "string",
			title: "Account Email",
		},
	},
	type: "object",
	required: ["oauth_name", "access_token", "account_id", "account_email"],
	title: "OAuthAccount",
	description: "Base OAuth account model.",
	example: {
		_id: "string",
		access_token: "string",
		account_email: "user@example.com",
		account_id: "string",
		expires_at: 1234567890,
		oauth_name: "string",
		refresh_token: "string",
	},
} as const;

export const OrderTypeSchema = {
	type: "string",
	enum: ["MARKET", "LIMIT", "STOP", "STOP_LIMIT"],
	title: "OrderType",
	description: "주문 타입",
} as const;

export const PerformanceMetricsSchema = {
	properties: {
		total_return: {
			type: "number",
			title: "Total Return",
			description: "총 수익률",
		},
		annualized_return: {
			type: "number",
			title: "Annualized Return",
			description: "연환산 수익률",
		},
		volatility: {
			type: "number",
			title: "Volatility",
			description: "변동성",
		},
		sharpe_ratio: {
			type: "number",
			title: "Sharpe Ratio",
			description: "샤프 비율",
		},
		max_drawdown: {
			type: "number",
			title: "Max Drawdown",
			description: "최대 낙폭",
		},
		total_trades: {
			type: "integer",
			title: "Total Trades",
			description: "총 거래 수",
		},
		winning_trades: {
			type: "integer",
			title: "Winning Trades",
			description: "승리 거래 수",
		},
		losing_trades: {
			type: "integer",
			title: "Losing Trades",
			description: "패배 거래 수",
		},
		win_rate: {
			type: "number",
			title: "Win Rate",
			description: "승률",
		},
	},
	type: "object",
	required: [
		"total_return",
		"annualized_return",
		"volatility",
		"sharpe_ratio",
		"max_drawdown",
		"total_trades",
		"winning_trades",
		"losing_trades",
		"win_rate",
	],
	title: "PerformanceMetrics",
	description: "성과 지표 내장 모델",
} as const;

export const PerformanceResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		id: {
			type: "string",
			title: "Id",
			description: "성과 ID",
		},
		strategy_id: {
			type: "string",
			title: "Strategy Id",
			description: "전략 ID",
		},
		strategy_name: {
			type: "string",
			title: "Strategy Name",
			description: "전략 이름",
		},
		total_signals: {
			type: "integer",
			title: "Total Signals",
			description: "총 신호 수",
		},
		buy_signals: {
			type: "integer",
			title: "Buy Signals",
			description: "매수 신호 수",
		},
		sell_signals: {
			type: "integer",
			title: "Sell Signals",
			description: "매도 신호 수",
		},
		hold_signals: {
			type: "integer",
			title: "Hold Signals",
			description: "보유 신호 수",
		},
		total_return: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Total Return",
			description: "총 수익률",
		},
		win_rate: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Win Rate",
			description: "승률",
		},
		avg_return_per_trade: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Avg Return Per Trade",
			description: "거래당 평균 수익률",
		},
		max_drawdown: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Max Drawdown",
			description: "최대 낙폭",
		},
		sharpe_ratio: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Sharpe Ratio",
			description: "샤프 비율",
		},
		calmar_ratio: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Calmar Ratio",
			description: "칼마 비율",
		},
		volatility: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Volatility",
			description: "변동성",
		},
		start_date: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "Start Date",
			description: "시작일",
		},
		end_date: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "End Date",
			description: "종료일",
		},
		accuracy: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Accuracy",
			description: "정확도",
		},
		avg_signal_strength: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Avg Signal Strength",
			description: "평균 신호 강도",
		},
		created_at: {
			type: "string",
			format: "date-time",
			title: "Created At",
			description: "생성 시간",
		},
		updated_at: {
			type: "string",
			format: "date-time",
			title: "Updated At",
			description: "수정 시간",
		},
	},
	type: "object",
	required: [
		"id",
		"strategy_id",
		"strategy_name",
		"total_signals",
		"buy_signals",
		"sell_signals",
		"hold_signals",
		"created_at",
		"updated_at",
	],
	title: "PerformanceResponse",
	description: "Performance response",
} as const;

export const PortfolioDataPointSchema = {
	properties: {
		timestamp: {
			type: "string",
			format: "date-time",
			title: "Timestamp",
			description: "시간",
		},
		portfolio_value: {
			type: "number",
			title: "Portfolio Value",
			description: "포트폴리오 가치",
		},
		pnl: {
			type: "number",
			title: "Pnl",
			description: "손익",
		},
		pnl_percentage: {
			type: "number",
			title: "Pnl Percentage",
			description: "손익률",
		},
		benchmark_value: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Benchmark Value",
			description: "벤치마크 가치",
		},
	},
	type: "object",
	required: ["timestamp", "portfolio_value", "pnl", "pnl_percentage"],
	title: "PortfolioDataPoint",
	description: "포트폴리오 데이터 포인트.",
} as const;

export const PortfolioPerformanceSchema = {
	properties: {
		period: {
			type: "string",
			title: "Period",
			description: "기간",
		},
		data_points: {
			items: {
				$ref: "#/components/schemas/PortfolioDataPoint",
			},
			type: "array",
			title: "Data Points",
			description: "데이터 포인트들",
		},
		summary: {
			$ref: "#/components/schemas/PortfolioPerformanceSummary",
			description: "성과 요약",
		},
	},
	type: "object",
	required: ["period", "data_points", "summary"],
	title: "PortfolioPerformance",
	description: "포트폴리오 성과 데이터.",
} as const;

export const PortfolioPerformanceResponseSchema = {
	properties: {
		data: {
			$ref: "#/components/schemas/PortfolioPerformance",
			description: "포트폴리오 성과",
		},
		message: {
			type: "string",
			title: "Message",
			description: "응답 메시지",
			default: "포트폴리오 성과 조회 성공",
		},
	},
	type: "object",
	required: ["data"],
	title: "PortfolioPerformanceResponse",
	description: "포트폴리오 성과 응답.",
} as const;

export const PortfolioPerformanceSummarySchema = {
	properties: {
		total_return: {
			type: "number",
			title: "Total Return",
			description: "총 수익률",
		},
		volatility: {
			type: "number",
			title: "Volatility",
			description: "변동성",
		},
		sharpe_ratio: {
			type: "number",
			title: "Sharpe Ratio",
			description: "샤프 비율",
		},
		max_drawdown: {
			type: "number",
			title: "Max Drawdown",
			description: "최대 낙폭",
		},
	},
	type: "object",
	required: ["total_return", "volatility", "sharpe_ratio", "max_drawdown"],
	title: "PortfolioPerformanceSummary",
	description: "포트폴리오 성과 요약.",
} as const;

export const PortfolioSummarySchema = {
	properties: {
		total_value: {
			type: "number",
			title: "Total Value",
			description: "총 포트폴리오 가치",
		},
		total_pnl: {
			type: "number",
			title: "Total Pnl",
			description: "총 손익",
		},
		total_pnl_percentage: {
			type: "number",
			title: "Total Pnl Percentage",
			description: "총 손익률",
		},
		daily_pnl: {
			type: "number",
			title: "Daily Pnl",
			description: "일일 손익",
		},
		daily_pnl_percentage: {
			type: "number",
			title: "Daily Pnl Percentage",
			description: "일일 손익률",
		},
	},
	type: "object",
	required: [
		"total_value",
		"total_pnl",
		"total_pnl_percentage",
		"daily_pnl",
		"daily_pnl_percentage",
	],
	title: "PortfolioSummary",
	description: "포트폴리오 요약 정보.",
} as const;

export const PositionSchema = {
	properties: {
		symbol: {
			type: "string",
			title: "Symbol",
			description: "심볼",
		},
		quantity: {
			type: "number",
			title: "Quantity",
			description: "보유 수량",
		},
		avg_price: {
			type: "number",
			title: "Avg Price",
			description: "평균 단가",
		},
		current_price: {
			type: "number",
			title: "Current Price",
			description: "현재 가격",
		},
		unrealized_pnl: {
			type: "number",
			title: "Unrealized Pnl",
			description: "미실현 손익",
		},
		realized_pnl: {
			type: "number",
			title: "Realized Pnl",
			description: "실현 손익",
			default: 0,
		},
		first_buy_date: {
			type: "string",
			format: "date-time",
			title: "First Buy Date",
			description: "최초 매수일",
		},
		last_update: {
			type: "string",
			format: "date-time",
			title: "Last Update",
			description: "마지막 업데이트",
		},
	},
	type: "object",
	required: [
		"symbol",
		"quantity",
		"avg_price",
		"current_price",
		"unrealized_pnl",
		"first_buy_date",
	],
	title: "Position",
	description: "포지션 정보 내장 모델",
} as const;

export const PydanticObjectIdSchema = {
	type: "string",
	maxLength: 24,
	minLength: 24,
	pattern: "^[0-9a-f]{24}$",
	example: "5eb7cf5a86d9755df3a6c593",
} as const;

export const RecentActivitySchema = {
	properties: {
		trades_count_today: {
			type: "integer",
			title: "Trades Count Today",
			description: "오늘 거래 수",
		},
		backtests_count_week: {
			type: "integer",
			title: "Backtests Count Week",
			description: "이번 주 백테스트 수",
		},
		last_login: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "Last Login",
			description: "마지막 로그인",
		},
	},
	type: "object",
	required: ["trades_count_today", "backtests_count_week"],
	title: "RecentActivity",
	description: "최근 활동 정보.",
} as const;

export const RecentTradesSchema = {
	properties: {
		trades: {
			items: {
				$ref: "#/components/schemas/TradeItem",
			},
			type: "array",
			title: "Trades",
			description: "거래 목록",
		},
		summary: {
			$ref: "#/components/schemas/TradesSummary",
			description: "거래 요약",
		},
	},
	type: "object",
	required: ["trades", "summary"],
	title: "RecentTrades",
	description: "최근 거래 데이터.",
} as const;

export const RecentTradesResponseSchema = {
	properties: {
		data: {
			$ref: "#/components/schemas/RecentTrades",
			description: "최근 거래 데이터",
		},
		message: {
			type: "string",
			title: "Message",
			description: "응답 메시지",
			default: "최근 거래 조회 성공",
		},
	},
	type: "object",
	required: ["data"],
	title: "RecentTradesResponse",
	description: "최근 거래 응답.",
} as const;

export const SentimentTypeSchema = {
	type: "string",
	enum: ["positive", "neutral", "negative"],
	title: "SentimentType",
	description: "감정 분석 유형.",
} as const;

export const SignalTypeSchema = {
	type: "string",
	enum: ["BUY", "SELL", "HOLD"],
	title: "SignalType",
	description: "신호 타입",
} as const;

export const StockSymbolsResponseSchema = {
	properties: {
		symbols: {
			items: {
				$ref: "#/components/schemas/SymbolInfo",
			},
			type: "array",
			title: "Symbols",
		},
		count: {
			type: "integer",
			title: "Count",
		},
		search_term: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Search Term",
		},
	},
	type: "object",
	required: ["symbols", "count"],
	title: "StockSymbolsResponse",
} as const;

export const StrategyComparisonSchema = {
	properties: {
		strategies: {
			items: {
				$ref: "#/components/schemas/StrategyPerformanceItem",
			},
			type: "array",
			title: "Strategies",
			description: "전략 목록",
		},
	},
	type: "object",
	required: ["strategies"],
	title: "StrategyComparison",
	description: "전략 비교 데이터.",
} as const;

export const StrategyComparisonResponseSchema = {
	properties: {
		data: {
			$ref: "#/components/schemas/StrategyComparison",
			description: "전략 비교 데이터",
		},
		message: {
			type: "string",
			title: "Message",
			description: "응답 메시지",
			default: "전략 비교 조회 성공",
		},
	},
	type: "object",
	required: ["data"],
	title: "StrategyComparisonResponse",
	description: "전략 비교 응답.",
} as const;

export const StrategyCreateSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		name: {
			type: "string",
			title: "Name",
			description: "전략 이름",
		},
		strategy_type: {
			$ref: "#/components/schemas/StrategyType",
			description: "전략 타입",
		},
		description: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Description",
			description: "전략 설명",
		},
		parameters: {
			additionalProperties: true,
			type: "object",
			title: "Parameters",
			description: "전략 파라미터",
		},
		tags: {
			items: {
				type: "string",
			},
			type: "array",
			title: "Tags",
			description: "태그",
		},
	},
	type: "object",
	required: ["name", "strategy_type"],
	title: "StrategyCreate",
	description: "Strategy creation request",
} as const;

export const StrategyCreateFromTemplateSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		name: {
			type: "string",
			title: "Name",
			description: "전략 이름",
		},
		parameter_overrides: {
			anyOf: [
				{
					additionalProperties: {
						anyOf: [
							{},
							{
								type: "null",
							},
						],
					},
					type: "object",
				},
				{
					type: "null",
				},
			],
			title: "Parameter Overrides",
			description: "파라미터 오버라이드",
		},
	},
	type: "object",
	required: ["name"],
	title: "StrategyCreateFromTemplate",
	description: "Create strategy from template request",
} as const;

export const StrategyExecuteSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		symbol: {
			type: "string",
			title: "Symbol",
			description: "대상 심볼",
		},
		market_data: {
			additionalProperties: true,
			type: "object",
			title: "Market Data",
			description: "시장 데이터",
		},
	},
	type: "object",
	required: ["symbol", "market_data"],
	title: "StrategyExecute",
	description: "Strategy execution request",
} as const;

export const StrategyListResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		strategies: {
			items: {
				$ref: "#/components/schemas/StrategyResponse",
			},
			type: "array",
			title: "Strategies",
			description: "전략 목록",
		},
		total: {
			type: "integer",
			title: "Total",
			description: "총 개수",
		},
	},
	type: "object",
	required: ["strategies", "total"],
	title: "StrategyListResponse",
	description: "Strategy list response",
} as const;

export const StrategyPerformanceItemSchema = {
	properties: {
		strategy_id: {
			type: "string",
			title: "Strategy Id",
			description: "전략 ID",
		},
		name: {
			type: "string",
			title: "Name",
			description: "전략 이름",
		},
		type: {
			type: "string",
			title: "Type",
			description: "전략 타입",
		},
		total_return: {
			type: "number",
			title: "Total Return",
			description: "총 수익률",
		},
		win_rate: {
			type: "number",
			title: "Win Rate",
			description: "승률",
		},
		sharpe_ratio: {
			type: "number",
			title: "Sharpe Ratio",
			description: "샤프 비율",
		},
		trades_count: {
			type: "integer",
			title: "Trades Count",
			description: "거래 수",
		},
		last_execution: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "Last Execution",
			description: "마지막 실행",
		},
		status: {
			$ref: "#/components/schemas/StrategyStatus",
			description: "상태",
		},
	},
	type: "object",
	required: [
		"strategy_id",
		"name",
		"type",
		"total_return",
		"win_rate",
		"sharpe_ratio",
		"trades_count",
		"status",
	],
	title: "StrategyPerformanceItem",
	description: "전략 성과 항목.",
} as const;

export const StrategyResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		id: {
			type: "string",
			title: "Id",
			description: "전략 ID",
		},
		name: {
			type: "string",
			title: "Name",
			description: "전략 이름",
		},
		strategy_type: {
			$ref: "#/components/schemas/StrategyType",
			description: "전략 타입",
		},
		description: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Description",
			description: "전략 설명",
		},
		parameters: {
			additionalProperties: true,
			type: "object",
			title: "Parameters",
			description: "전략 파라미터",
		},
		is_active: {
			type: "boolean",
			title: "Is Active",
			description: "활성화 상태",
		},
		is_template: {
			type: "boolean",
			title: "Is Template",
			description: "템플릿 여부",
		},
		created_by: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Created By",
			description: "생성자",
		},
		created_at: {
			type: "string",
			format: "date-time",
			title: "Created At",
			description: "생성 시간",
		},
		updated_at: {
			type: "string",
			format: "date-time",
			title: "Updated At",
			description: "수정 시간",
		},
		tags: {
			items: {
				type: "string",
			},
			type: "array",
			title: "Tags",
			description: "태그",
		},
	},
	type: "object",
	required: [
		"id",
		"name",
		"strategy_type",
		"is_active",
		"is_template",
		"created_at",
		"updated_at",
	],
	title: "StrategyResponse",
	description: "Strategy response",
} as const;

export const StrategyStatusSchema = {
	type: "string",
	enum: ["active", "paused", "stopped"],
	title: "StrategyStatus",
	description: "전략 상태.",
} as const;

export const StrategySummarySchema = {
	properties: {
		active_count: {
			type: "integer",
			title: "Active Count",
			description: "활성 전략 수",
		},
		total_count: {
			type: "integer",
			title: "Total Count",
			description: "총 전략 수",
		},
		avg_success_rate: {
			type: "number",
			title: "Avg Success Rate",
			description: "평균 성공률",
		},
		best_performing: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Best Performing",
			description: "최고 성과 전략 ID",
		},
	},
	type: "object",
	required: ["active_count", "total_count", "avg_success_rate"],
	title: "StrategySummary",
	description: "전략 요약 정보.",
} as const;

export const StrategyTypeSchema = {
	type: "string",
	enum: ["sma_crossover", "rsi_mean_reversion", "momentum", "buy_and_hold"],
	title: "StrategyType",
	description: "지원되는 전략 타입",
} as const;

export const StrategyUpdateSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		name: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Name",
			description: "전략 이름",
		},
		description: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Description",
			description: "전략 설명",
		},
		parameters: {
			anyOf: [
				{
					additionalProperties: {
						anyOf: [
							{},
							{
								type: "null",
							},
						],
					},
					type: "object",
				},
				{
					type: "null",
				},
			],
			title: "Parameters",
			description: "전략 파라미터",
		},
		is_active: {
			anyOf: [
				{
					type: "boolean",
				},
				{
					type: "null",
				},
			],
			title: "Is Active",
			description: "활성화 상태",
		},
		tags: {
			anyOf: [
				{
					items: {
						anyOf: [
							{
								type: "string",
							},
							{
								type: "null",
							},
						],
					},
					type: "array",
				},
				{
					type: "null",
				},
			],
			title: "Tags",
			description: "태그",
		},
	},
	type: "object",
	title: "StrategyUpdate",
	description: "Strategy update request",
} as const;

export const SymbolInfoSchema = {
	properties: {
		symbol: {
			type: "string",
			title: "Symbol",
		},
		name: {
			type: "string",
			title: "Name",
		},
		type: {
			type: "string",
			title: "Type",
		},
		region: {
			type: "string",
			title: "Region",
		},
		market_open: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Market Open",
		},
		market_close: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Market Close",
		},
		timezone: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Timezone",
		},
		currency: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Currency",
		},
		match_score: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Match Score",
		},
	},
	type: "object",
	required: ["symbol", "name", "type", "region"],
	title: "SymbolInfo",
} as const;

export const TemplateCreateSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		name: {
			type: "string",
			title: "Name",
			description: "템플릿 이름",
		},
		strategy_type: {
			$ref: "#/components/schemas/StrategyType",
			description: "전략 타입",
		},
		description: {
			type: "string",
			title: "Description",
			description: "템플릿 설명",
		},
		default_parameters: {
			additionalProperties: true,
			type: "object",
			title: "Default Parameters",
			description: "기본 파라미터",
		},
		parameter_schema: {
			anyOf: [
				{
					additionalProperties: {
						anyOf: [
							{},
							{
								type: "null",
							},
						],
					},
					type: "object",
				},
				{
					type: "null",
				},
			],
			title: "Parameter Schema",
			description: "파라미터 스키마",
		},
		tags: {
			items: {
				type: "string",
			},
			type: "array",
			title: "Tags",
			description: "태그",
		},
	},
	type: "object",
	required: ["name", "strategy_type", "description"],
	title: "TemplateCreate",
	description: "Template creation request",
} as const;

export const TemplateListResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		templates: {
			items: {
				$ref: "#/components/schemas/TemplateResponse",
			},
			type: "array",
			title: "Templates",
			description: "템플릿 목록",
		},
		total: {
			type: "integer",
			title: "Total",
			description: "총 개수",
		},
	},
	type: "object",
	required: ["templates", "total"],
	title: "TemplateListResponse",
	description: "Template list response",
} as const;

export const TemplateResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		id: {
			type: "string",
			title: "Id",
			description: "템플릿 ID",
		},
		name: {
			type: "string",
			title: "Name",
			description: "템플릿 이름",
		},
		strategy_type: {
			$ref: "#/components/schemas/StrategyType",
			description: "전략 타입",
		},
		description: {
			type: "string",
			title: "Description",
			description: "템플릿 설명",
		},
		default_parameters: {
			additionalProperties: true,
			type: "object",
			title: "Default Parameters",
			description: "기본 파라미터",
		},
		parameter_schema: {
			anyOf: [
				{
					additionalProperties: {
						anyOf: [
							{},
							{
								type: "null",
							},
						],
					},
					type: "object",
				},
				{
					type: "null",
				},
			],
			title: "Parameter Schema",
			description: "파라미터 스키마",
		},
		usage_count: {
			type: "integer",
			title: "Usage Count",
			description: "사용 횟수",
		},
		created_at: {
			type: "string",
			format: "date-time",
			title: "Created At",
			description: "생성 시간",
		},
		updated_at: {
			type: "string",
			format: "date-time",
			title: "Updated At",
			description: "수정 시간",
		},
		tags: {
			items: {
				type: "string",
			},
			type: "array",
			title: "Tags",
			description: "태그",
		},
	},
	type: "object",
	required: [
		"id",
		"name",
		"strategy_type",
		"description",
		"usage_count",
		"created_at",
		"updated_at",
	],
	title: "TemplateResponse",
	description: "Template response",
} as const;

export const TemplateUpdateSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		name: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Name",
			description: "템플릿 이름",
		},
		description: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Description",
			description: "템플릿 설명",
		},
		default_parameters: {
			anyOf: [
				{
					additionalProperties: true,
					type: "object",
				},
				{
					type: "null",
				},
			],
			title: "Default Parameters",
			description: "기본 파라미터",
		},
		parameter_schema: {
			anyOf: [
				{
					additionalProperties: {
						anyOf: [
							{},
							{
								type: "null",
							},
						],
					},
					type: "object",
				},
				{
					type: "null",
				},
			],
			title: "Parameter Schema",
			description: "파라미터 스키마",
		},
		tags: {
			anyOf: [
				{
					items: {
						type: "string",
					},
					type: "array",
				},
				{
					type: "null",
				},
			],
			title: "Tags",
			description: "태그",
		},
	},
	type: "object",
	title: "TemplateUpdate",
	description: "Template update request",
} as const;

export const TradeSchema = {
	properties: {
		trade_id: {
			type: "string",
			title: "Trade Id",
			description: "거래 ID",
		},
		symbol: {
			type: "string",
			title: "Symbol",
			description: "심볼",
		},
		trade_type: {
			$ref: "#/components/schemas/TradeType",
		},
		order_type: {
			$ref: "#/components/schemas/OrderType",
			default: "MARKET",
		},
		quantity: {
			type: "number",
			title: "Quantity",
			description: "수량",
		},
		price: {
			type: "number",
			title: "Price",
			description: "체결 가격",
		},
		timestamp: {
			type: "string",
			format: "date-time",
			title: "Timestamp",
			description: "거래 시간",
		},
		commission: {
			type: "number",
			title: "Commission",
			description: "수수료",
			default: 0,
		},
		slippage: {
			type: "number",
			title: "Slippage",
			description: "슬리피지",
			default: 0,
		},
		strategy_signal_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Strategy Signal Id",
			description: "전략 신호 ID",
		},
		notes: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Notes",
			description: "메모",
		},
	},
	type: "object",
	required: [
		"trade_id",
		"symbol",
		"trade_type",
		"quantity",
		"price",
		"timestamp",
	],
	title: "Trade",
	description: "거래 기록 내장 모델",
} as const;

export const TradeItemSchema = {
	properties: {
		trade_id: {
			type: "string",
			title: "Trade Id",
			description: "거래 ID",
		},
		symbol: {
			type: "string",
			title: "Symbol",
			description: "심볼",
		},
		side: {
			$ref: "#/components/schemas/TradeSide",
			description: "거래 방향",
		},
		quantity: {
			type: "integer",
			title: "Quantity",
			description: "수량",
		},
		price: {
			type: "number",
			title: "Price",
			description: "가격",
		},
		value: {
			type: "number",
			title: "Value",
			description: "거래 금액",
		},
		pnl: {
			type: "number",
			title: "Pnl",
			description: "손익",
		},
		strategy_name: {
			type: "string",
			title: "Strategy Name",
			description: "전략 이름",
		},
		timestamp: {
			type: "string",
			format: "date-time",
			title: "Timestamp",
			description: "거래 시간",
		},
	},
	type: "object",
	required: [
		"trade_id",
		"symbol",
		"side",
		"quantity",
		"price",
		"value",
		"pnl",
		"strategy_name",
		"timestamp",
	],
	title: "TradeItem",
	description: "거래 항목.",
} as const;

export const TradeSideSchema = {
	type: "string",
	enum: ["buy", "sell"],
	title: "TradeSide",
	description: "거래 방향.",
} as const;

export const TradeTypeSchema = {
	type: "string",
	enum: ["BUY", "SELL"],
	title: "TradeType",
	description: "거래 타입",
} as const;

export const TradesSummarySchema = {
	properties: {
		total_trades: {
			type: "integer",
			title: "Total Trades",
			description: "총 거래 수",
		},
		winning_trades: {
			type: "integer",
			title: "Winning Trades",
			description: "수익 거래 수",
		},
		total_pnl: {
			type: "number",
			title: "Total Pnl",
			description: "총 손익",
		},
	},
	type: "object",
	required: ["total_trades", "winning_trades", "total_pnl"],
	title: "TradesSummary",
	description: "거래 요약.",
} as const;

export const UserCreateSchema = {
	properties: {
		email: {
			type: "string",
			format: "email",
			title: "Email",
		},
		full_name: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Full Name",
		},
		password: {
			type: "string",
			title: "Password",
		},
		is_active: {
			anyOf: [
				{
					type: "boolean",
				},
				{
					type: "null",
				},
			],
			title: "Is Active",
			default: true,
		},
		is_superuser: {
			anyOf: [
				{
					type: "boolean",
				},
				{
					type: "null",
				},
			],
			title: "Is Superuser",
			default: false,
		},
		is_verified: {
			anyOf: [
				{
					type: "boolean",
				},
				{
					type: "null",
				},
			],
			title: "Is Verified",
			default: false,
		},
		avatar_url: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Avatar Url",
		},
	},
	type: "object",
	required: ["email", "password"],
	title: "UserCreate",
	example: {
		avatar_url: "string",
		email: "user@example.com",
		full_name: "string",
		is_active: true,
		is_superuser: false,
		is_verified: false,
		password: "string",
	},
} as const;

export const UserResponseSchema = {
	properties: {
		email: {
			type: "string",
			format: "email",
			title: "Email",
		},
		full_name: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Full Name",
		},
		is_active: {
			type: "boolean",
			title: "Is Active",
			default: true,
		},
		is_superuser: {
			type: "boolean",
			title: "Is Superuser",
			default: false,
		},
		is_verified: {
			type: "boolean",
			title: "Is Verified",
			default: false,
		},
		avatar_url: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Avatar Url",
		},
		oauth_accounts: {
			items: {
				$ref: "#/components/schemas/OAuthAccount",
			},
			type: "array",
			title: "Oauth Accounts",
		},
	},
	type: "object",
	required: ["email"],
	title: "UserResponse",
	description: "Base User model.",
	example: {
		_id: "string",
		avatar_url: "string",
		email: "user@example.com",
		full_name: "string",
		is_active: true,
		is_superuser: false,
		is_verified: false,
		oauth_accounts: [
			{
				_id: "string",
				access_token: "string",
				account_email: "user@example.com",
				account_id: "string",
				expires_at: 1234567890,
				oauth_name: "string",
				refresh_token: "string",
			},
		],
	},
} as const;

export const UserUpdateSchema = {
	properties: {
		password: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Password",
		},
		email: {
			anyOf: [
				{
					type: "string",
					format: "email",
				},
				{
					type: "null",
				},
			],
			title: "Email",
		},
		full_name: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Full Name",
		},
		is_active: {
			anyOf: [
				{
					type: "boolean",
				},
				{
					type: "null",
				},
			],
			title: "Is Active",
		},
		is_superuser: {
			anyOf: [
				{
					type: "boolean",
				},
				{
					type: "null",
				},
			],
			title: "Is Superuser",
		},
		is_verified: {
			anyOf: [
				{
					type: "boolean",
				},
				{
					type: "null",
				},
			],
			title: "Is Verified",
		},
		avatar_url: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Avatar Url",
		},
	},
	type: "object",
	title: "UserUpdate",
	example: {
		avatar_url: "string",
		email: "user@example.com",
		full_name: "string",
		is_active: true,
		is_superuser: false,
		is_verified: false,
		password: "string",
	},
} as const;

export const ValidationErrorSchema = {
	properties: {
		loc: {
			items: {
				anyOf: [
					{
						type: "string",
					},
					{
						type: "integer",
					},
				],
			},
			type: "array",
			title: "Location",
		},
		msg: {
			type: "string",
			title: "Message",
		},
		type: {
			type: "string",
			title: "Error Type",
		},
	},
	type: "object",
	required: ["loc", "msg", "type"],
	title: "ValidationError",
} as const;

export const WatchlistCreateSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		name: {
			type: "string",
			title: "Name",
		},
		symbols: {
			items: {
				type: "string",
			},
			type: "array",
			title: "Symbols",
		},
		description: {
			type: "string",
			title: "Description",
			default: "",
		},
	},
	type: "object",
	required: ["name", "symbols"],
	title: "WatchlistCreate",
	description: "워치리스트 생성 모델",
} as const;

export const WatchlistListResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		watchlists: {
			items: {
				$ref: "#/components/schemas/WatchlistResponse",
			},
			type: "array",
			title: "Watchlists",
			default: [],
		},
		total_count: {
			type: "integer",
			title: "Total Count",
			default: 0,
		},
	},
	type: "object",
	title: "WatchlistListResponse",
	description: "워치리스트 목록 응답 모델",
} as const;

export const WatchlistQuoteItemSchema = {
	properties: {
		symbol: {
			type: "string",
			title: "Symbol",
			description: "심볼",
		},
		name: {
			type: "string",
			title: "Name",
			description: "회사명",
		},
		current_price: {
			type: "number",
			title: "Current Price",
			description: "현재가",
		},
		change: {
			type: "number",
			title: "Change",
			description: "변화량",
		},
		change_percentage: {
			type: "number",
			title: "Change Percentage",
			description: "변화율",
		},
		volume: {
			type: "integer",
			title: "Volume",
			description: "거래량",
		},
		market_cap: {
			anyOf: [
				{
					type: "number",
				},
				{
					type: "null",
				},
			],
			title: "Market Cap",
			description: "시가총액",
		},
	},
	type: "object",
	required: [
		"symbol",
		"name",
		"current_price",
		"change",
		"change_percentage",
		"volume",
	],
	title: "WatchlistQuoteItem",
	description: "관심종목 시세 항목.",
} as const;

export const WatchlistQuotesSchema = {
	properties: {
		symbols: {
			items: {
				$ref: "#/components/schemas/WatchlistQuoteItem",
			},
			type: "array",
			title: "Symbols",
			description: "심볼 목록",
		},
		last_updated: {
			type: "string",
			format: "date-time",
			title: "Last Updated",
			description: "마지막 업데이트",
		},
	},
	type: "object",
	required: ["symbols", "last_updated"],
	title: "WatchlistQuotes",
	description: "관심종목 시세 데이터.",
} as const;

export const WatchlistQuotesResponseSchema = {
	properties: {
		data: {
			$ref: "#/components/schemas/WatchlistQuotes",
			description: "관심종목 시세",
		},
		message: {
			type: "string",
			title: "Message",
			description: "응답 메시지",
			default: "관심종목 시세 조회 성공",
		},
	},
	type: "object",
	required: ["data"],
	title: "WatchlistQuotesResponse",
	description: "관심종목 시세 응답.",
} as const;

export const WatchlistResponseSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		name: {
			type: "string",
			title: "Name",
		},
		symbols: {
			items: {
				type: "string",
			},
			type: "array",
			title: "Symbols",
		},
		description: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Description",
			default: "",
		},
		created_at: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "Created At",
		},
		updated_at: {
			anyOf: [
				{
					type: "string",
					format: "date-time",
				},
				{
					type: "null",
				},
			],
			title: "Updated At",
		},
	},
	type: "object",
	required: ["name", "symbols"],
	title: "WatchlistResponse",
	description: "워치리스트 응답 모델",
} as const;

export const WatchlistUpdateSchema = {
	properties: {
		user_id: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "User Id",
		},
		symbols: {
			items: {
				type: "string",
			},
			type: "array",
			title: "Symbols",
		},
		name: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Name",
			default: "default",
		},
		description: {
			anyOf: [
				{
					type: "string",
				},
				{
					type: "null",
				},
			],
			title: "Description",
			default: "",
		},
	},
	type: "object",
	required: ["symbols"],
	title: "WatchlistUpdate",
	description: "워치리스트 업데이트 모델",
} as const;
